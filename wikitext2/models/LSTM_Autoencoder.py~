import torch
import torch.nn as nn

class LSTMAutoEncoder(nn.Module):
    def __init__(self, embedding_dim, hidden_dim, vocab_size):
        super(LSTMAutoEncoder, self).__init__()

        self.embedding_dim = embedding_dim
        self.hidden_dim = hidden_dim

        self.word_embeddings = nn.Embedding(vocab_size, embedding_dim)

        self.lstm_down = nn.LSTM(embedding_dim, hidden_dim)
        self.lstm_up = nn.LSTM(hidden_dim, embedding_dim)

        #final loss fn should be
        #(mse/-bleu(input,output)) + sparsity penalty/regularization + 
        self.loss_fn = 
